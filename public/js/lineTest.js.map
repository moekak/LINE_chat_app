{"version":3,"file":"/js/lineTest.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;;AAEA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;;ACVP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACO;AACP;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uHAAuH,IAAI,GAAG,IAAI,SAAS,IAAI;AAC/I;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;AC/DO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrB8B;AACnB;AACqD;AAChE,iBAAiB,8CAAM;AAC6B;AACR;AACD;AACJ;AACD;AACS;AACY;AAChB;AACmB;AACT;AACM;;;;;;;;;;;;;;;;;;;;;;;;ACdO;AACX;AAChB;AACA;AACS;AACX;AACsC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACO,mCAAmC,iEAAO;AACjD;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,QAAQ;AACvB;AACA;AACA;AACA,0BAA0B,+DAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yBAAyB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2DAAK;AACjC;AACA,QAAQ,+DAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gCAAgC;AAChC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,8BAA8B,2DAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,8BAA8B,iEAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA,sCAAsC;AACtC;AACA,oBAAoB,sDAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,wBAAwB,6BAA6B;AACrD;AACA;AACA,+BAA+B,oDAAU;AACzC;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAQ;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sDAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6BAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACO;AACP,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,wCAAwC,4DAAkB;AAC1D;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACttBgD;AACO;AACL;AACJ;AACvC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO,wBAAwB,iEAAO;AACtC;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,uBAAuB,8DAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2DAAM;AACnC;AACA;AACA;;;;;;;;;;;;;;;;;;AC7I4C;AACH;AACF;AAChC;AACP,eAAe,kDAAE;AACjB,kBAAkB,gDAAE;AACpB,aAAa,qDAAG;AAChB;;;;;;;;;;;;;;;;ACPuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oBAAoB,gDAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;;ACvDuC;AACgB;AACE;AACS;AACjB;AACjD;AACO,sBAAsB,gDAAO;AACpC;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACO,sBAAsB,iEAAO;AACpC;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4EAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,yDAAO;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAU;AACjC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9Q4C;AACF;AACsB;AACzD,sBAAsB,oDAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+CAA+C;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,QAAQ,+DAAa;AACrB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,sDAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChJ4C;AACI;AACA;AAC4B;AAC5E;AACA;AACA;AACA;AACO,qBAAqB,oDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8CAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA,YAAY,8DAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0DAAQ;AAC5B;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,sDAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAU,cAAc,4DAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5H4C;AACE;AAC2C;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,iBAAiB,oDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sCAAsC,2EAAyB;AAC/D;AACA,sCAAsC,2EAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA,iCAAiC;AACjC;AACA,oCAAoC,SAAS,eAAe,EAAE;AAC9D;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA,oBAAoB,0DAAQ;AAC5B;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/EiE;AAC1D;AACP;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA,2BAA2B,4DAAU;AACrC,6BAA6B,4DAAU;AAChC;AACP;AACA,mDAAmD,4DAAU;AAC7D,uDAAuD,4DAAU;AACjE;AACA;AACA,2BAA2B,4DAAU,iBAAiB,4DAAU;AAChE,6BAA6B,4DAAU,mBAAmB,4DAAU;AACpE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;AC1DA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,uBAAuB;AACqC;;;;;;;;;;;;;;;;ACb5D;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACO;AACP;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1CmE;AACV;AACzD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6DAAoB;AAC3C;AACA,eAAe,qDAAY;AAC3B;AACA;AACA;AACA,kBAAkB,6DAAoB;AACtC;AACA;AACA;AACA,kBAAkB,6DAAoB;AACtC;AACA;AACA;AACA;AACA,wBAAwB,sEAAM;AAC9B;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7D4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACwB;;;;;;;;;;;;;;;;;;;;;;;;ACnE+C;AACtB;AACJ;AAC7C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAY;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C,8BAA8B,8DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,sEAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qDAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8DAAY;AACnD;AACA;AACA;AACA,uCAAuC,qDAAY;AACnD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACO;AAC8D;;;;;;;;;;;;;;;AC3JrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjE+B;AACQ;AACF;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gDAAO;AACxB;AACA;AACA;AACA,4BAA4B,gDAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AAC4C;AAC5C;AACA;AACA;AACA;AACA;AACgF;AACgB;;;;;;;;;;;;;;;;;;;;;ACzDV;AACjD;AACM;AACd;AACiB;AACU;AACjD,sBAAsB,iEAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uEAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAO;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uCAAuC,6CAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAM;AAChC;AACA;AACA;AACA;AACA;AACA,+BAA+B,0CAAE;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0CAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0CAAE,0CAA0C,0CAAE,0CAA0C,0CAAE,4CAA4C,0CAAE;AAC/J;AACA,QAAQ,0CAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAAQ;AAChB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9WO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACL8C;AACjB;AAC2B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,kFAAkF,eAAe;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C,IAAI;AACJ;AACO,qBAAqB,iEAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,YAAY;AACZ;AACA;AACA,4CAA4C;AAC5C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mBAAmB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,KAAK;AACzD,kEAAkE,KAAK;AACvE;AACA;AACA;AACA;AACA,+CAA+C,KAAK,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,QAAQ;AACR;AACA;AACA,2CAA2C;AAC3C,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0CAAE;AACd,YAAY,0CAAE;AACd,YAAY,0CAAE;AACd,YAAY,0CAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,qCAAqC;AACrC,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAU;AAC5B;AACA,kCAAkC,0CAA0C;AAC5E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,iBAAiB,wDAAU;AAC3B;AACA;AACA,iBAAiB,wDAAU;AAC3B,iBAAiB,wDAAU;AAC3B;AACA;AACA,iBAAiB,wDAAU;AAC3B;AACA;AACA,iBAAiB,wDAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wDAAU;AAChC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,wDAAU,aAAa;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,MAAM;AACxC,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,MAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACj3ByC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uDAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1D0C;AAC1C;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACO;AACP;AACA;AACA;AACA;AACA,uCAAuC;AACvC,aAAa;AACb;AACA;AACA;AACA;AACA,QAAQ,uDAAQ;AAChB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACO;AACP;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AClFuD;AACY;AACd;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACO;AACP;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,gBAAgB,wDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAiB;AAChD;AACA;AACA,+BAA+B;AAC/B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACO,sBAAsB,iEAAO;AACpC;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uDAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,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","sources":["webpack://line-chat-app/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/globals.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/index.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/socket.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/transport.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/transports/polling-fetch.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://line-chat-app/./node_modules/engine.io-client/build/esm/util.js","webpack://line-chat-app/./node_modules/engine.io-parser/build/esm/commons.js","webpack://line-chat-app/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://line-chat-app/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://line-chat-app/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://line-chat-app/./node_modules/engine.io-parser/build/esm/index.js","webpack://line-chat-app/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://line-chat-app/./node_modules/socket.io-client/build/esm/index.js","webpack://line-chat-app/./node_modules/socket.io-client/build/esm/manager.js","webpack://line-chat-app/./node_modules/socket.io-client/build/esm/on.js","webpack://line-chat-app/./node_modules/socket.io-client/build/esm/socket.js","webpack://line-chat-app/./node_modules/socket.io-client/build/esm/url.js","webpack://line-chat-app/./node_modules/socket.io-parser/build/esm/binary.js","webpack://line-chat-app/./node_modules/socket.io-parser/build/esm/index.js","webpack://line-chat-app/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://line-chat-app/./resources/js/config/apiEndPoints.js","webpack://line-chat-app/./resources/js/config/config.js","webpack://line-chat-app/./resources/js/module/component/chat/ChatMessageController.js","webpack://line-chat-app/./resources/js/module/component/chat/ChatSearchController.js","webpack://line-chat-app/./resources/js/module/component/chat/ChatUIHelper.js","webpack://line-chat-app/./resources/js/module/component/chat/ChatUserListController.js","webpack://line-chat-app/./resources/js/module/component/templates/elementTemplate.js","webpack://line-chat-app/./resources/js/module/component/ui/FormController.js","webpack://line-chat-app/./resources/js/module/component/ui/ModalController.js","webpack://line-chat-app/./resources/js/module/util/BrowserAndDeviceDetector.js","webpack://line-chat-app/./resources/js/module/util/FormatText.js","webpack://line-chat-app/./resources/js/module/util/api/Fetch.js","webpack://line-chat-app/./resources/js/module/util/messaging/messageService.js","webpack://line-chat-app/./resources/js/module/util/messaging/notificationSound.js","webpack://line-chat-app/./resources/js/module/util/scrolling/InfiniteScrollForList.js","webpack://line-chat-app/./resources/js/module/util/socket/SocketService.js","webpack://line-chat-app/./resources/js/module/util/state/UserStateManager.js","webpack://line-chat-app/webpack/bootstrap","webpack://line-chat-app/webpack/runtime/define property getters","webpack://line-chat-app/webpack/runtime/hasOwnProperty shorthand","webpack://line-chat-app/webpack/runtime/make namespace object","webpack://line-chat-app/./resources/js/lineTest.js"],"sourcesContent":["/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Polling } from \"./polling.js\";\n/**\n * HTTP long-polling based on the built-in `fetch()` method.\n *\n * Usage: browser, Node.js (since v18), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * @see https://caniuse.com/fetch\n * @see https://nodejs.org/api/globals.html#fetch\n */\nexport class Fetch extends Polling {\n    doPoll() {\n        this._fetch()\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch read error\", res.status, res);\n            }\n            res.text().then((data) => this.onData(data));\n        })\n            .catch((err) => {\n            this.onError(\"fetch read error\", err);\n        });\n    }\n    doWrite(data, callback) {\n        this._fetch(data)\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch write error\", res.status, res);\n            }\n            callback();\n        })\n            .catch((err) => {\n            this.onError(\"fetch write error\", err);\n        });\n    }\n    _fetch(data) {\n        var _a;\n        const isPost = data !== undefined;\n        const headers = new Headers(this.opts.extraHeaders);\n        if (isPost) {\n            headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n        }\n        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\n        return fetch(this.uri(), {\n            method: isPost ? \"POST\" : \"GET\",\n            body: isPost ? data : null,\n            headers,\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\",\n        }).then((res) => {\n            var _a;\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\n            return res;\n        });\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","export const API_ENDPOINTS = {\n    SEARCH_USERS: \"/api/search/users\",\n    LOGIN: \"/api/auth/login\",\n    REGISTER: \"/api/auth/register\",\n    FETCH_MESSAGES: \"/api/messages/fetch\",\n    GENERATE_TOKEN: \"/api/token/generate\",\n    ADMIN_MESSAGES_STORE: \"/api/admin/messages/store\",\n    TEMPLATE_SELECT: \"/api/template/select\",\n    UPDATE_BACKGROUND_COLOLR: \"/api/update/bgColor\",\n    GET_USER_CHATS : \"/api/get/messages\"\n};","// 本番用\n\n// export default {\n//     SOCKET_URL: 'https://chat-socket.info:3000',\n//     S3_URL: \"https://line-chat-app.s3.ap-northeast-1.amazonaws.com/images\",\n//     CHAT_URL: \"https://chat-system.info/admin/chat\"\n// };\n\n// 開発用\nexport default {\n    SOCKET_URL: 'https://socket.line-chat-system-dev.tokyo:3000',\n    S3_URL: \"https://line-chat-app-dev.s3.ap-northeast-1.amazonaws.com/images\",\n    CHAT_URL: \"https://chat.line-chat-system-dev.tokyo/admin/chat\"\n};","import { createLeftMessageContainer, createRightMessageContainer } from \"../templates/elementTemplate\"\nimport ModalController from \"../ui/ModalController\"\n\n/**\n * ChatMessageController\n * チャット画面にメッセージを表示するロジックを管理するクラス\n * \n * このクラスは、受け取ったメッセージ情報を元にチャット画面にメッセージを追加し、\n * 必要に応じて画像の切り取り領域 (cropArea) をオーバーレイ表示する\n * \n */\nclass ChatMessageController{\n    /**\n     * @param {string} messageType - メッセージの種類 (text, image など)\n     * @param {object} cropArea - 画像の切り取り領域\n     * @param {string} position - メッセージ挿入位置 (afterbegin, beforeend など)\n     * @param {string} time - メッセージの送信時刻\n     * @param {string} className - 挿入対象の DOM クラス名\n     * @param {string} senderType - 送信者のタイプ (admin, user など)\n     * @param {string} content - メッセージ内容\n     * @param {string} fileName - ファイルの名前\n     * @param {string} senderId - 送信者の ID\n    */\n\n    constructor({messageType, cropArea, position, time, className, senderType, content, fileName, senderId,type, ids = []}){\n        this.messageType = messageType\n        this.cropArea = cropArea\n        this.position = position\n        this.time = time\n        this.className = className\n        this.senderType = senderType\n        this.content = content\n        this.fileName = fileName\n        this.parentElement = document.querySelector(`.${this.className}`)\n        this.senderId = senderId\n        this.ids = ids\n        this.type = type\n    }\n\n    displayChatMessage(){\n        if(this.ids.includes(this.parentElement.getAttribute(\"data-id\"))) return \n        const shouldAddRightMessage = this.#isRightAlignedMessage();\n        this.#addChatMessage(shouldAddRightMessage);\n\n    }\n\n    /**\n     * メッセージを右側または左側に表示するべきかを判定\n     * @returns {boolean} - メッセージが右側に表示される場合は true、それ以外は false\n     */\n    #isRightAlignedMessage() {\n        const { senderType, fileName} = this;\n        return (\n            (senderType === \"admin\" && fileName === \"admin\") ||\n            (senderType === \"user\" && fileName === \"user\") \n        );\n    }\n\n    /**\n     * メッセージを画面に追加する\n     * @param {boolean} isRight - メッセージを右側に追加する場合は true、それ以外は false\n     */\n    #addChatMessage(isRight) {\n\n        const validPositions = [\"afterbegin\", \"beforeend\"];\n        const validPosition = validPositions.includes(this.position) ? this.position : \"beforeend\";\n        // メッセージHTMLを生成して挿入\n        const messageHTML = isRight ? createRightMessageContainer(this.messageType, this.time, this.content, this.cropArea, this.type): createLeftMessageContainer(this.messageType, this.time, this.content, this.cropArea, this.type);\n        this.parentElement.insertAdjacentHTML(validPosition, messageHTML);\n\n        // this.cropAreaがある場合は処理を適用\n\n        if (this.cropArea && Object.entries(this.cropArea).length > 0) {\n            this.#applyCropArea();\n        }\n    }\n\n    /**\n     * 画像の切り取り領域をオーバーレイ表示\n     */\n    #applyCropArea() {\n        const containers = document.querySelectorAll(\".image-container[data-crop]\");\n        containers.forEach((container) => {\n            // チャット画面に表示した画像を取得\n            const targetImage = container.querySelector(\".overlay-target\");\n            const overlay = container.querySelector(\".overlay\");\n    \n            targetImage.onload = () => this.#updateOverlayStyles(container, overlay);\n        });\n    }\n    \n    /**\n     * 切り取り領域に基づいてオーバーレイのスタイルを更新\n     * @param {HTMLElement} container - 対象画像のコンテナ\n     * @param {HTMLElement} overlay - オーバーレイ要素\n     */\n    #updateOverlayStyles (container, overlay) {\n        const imageRect = container.querySelector(\".overlay-target\").getBoundingClientRect();\n        let cropData = JSON.parse(container.dataset.crop);\n\n\n        if(typeof(cropData) === \"string\"){\n            cropData = JSON.parse(cropData)\n        }\n        \n        overlay.style.left = `${(cropData.x_percent / 100) * imageRect.width}px`;\n        overlay.style.top = `${(cropData.y_percent / 100) * imageRect.height}px`;\n        overlay.style.width = `${(cropData.width_percent / 100) * imageRect.width}px`;\n        overlay.style.height = `${(cropData.height_percent / 100) * imageRect.height}px`;\n\n        overlay.style.display = \"inline-block\";\n    }\n}\n\nexport default ChatMessageController;","import { API_ENDPOINTS } from \"../../../config/apiEndPoints\";\nimport Fetch from \"../../util/api/Fetch\";\nimport { createChatUserContainer } from \"../templates/elementTemplate\";\nimport ChatUIHelper from \"./ChatUIHelper\";\n\n/**\n * ChatSearchController\n * チャット画面で検索をするさいのロジックを管理するクラス\n */\nclass ChatSearchController{\n    /**\n     * ユーザー検索処理\n     * \n     * 指定されたデータを基にユーザー検索 API を呼び出し、結果を DOM に表示。\n     * \n     * @param {object} data - 検索リクエスト用データ (例: { admin_id: string, text: string })\n     *   - admin_id: 検索を実行する管理者の ID\n     *   - text: 検索対象のユーザー名\n     * \n     * @returns {Promise<void>} - 非同期処理のため Promise を返します。\n    */\n    static async createDivForSearch(data){\n\n        const response = await Fetch.fetchPostOperation(data, API_ENDPOINTS.SEARCH_USERS)\n        const parentElement = document.getElementById(\"js_chatUser_wrapper\");\n\n        if(response.length > 0){\n            parentElement.innerHTML = \"\"\n            response.forEach((res)=>{ \n                if(res[\"latest_all_message\"] !== null){\n                    parentElement.innerHTML += createChatUserContainer(res[\"entity_uuid\"], res)\n                }\n                \n            })\n\n        }else{\n            parentElement.innerHTML = '<p class=\"text_info\">ユーザーが見つかりませんでした</p>'\n        }\n    }\n}\n\n\nexport default ChatSearchController;","import FormatText from \"../../util/FormatText.js\";\nimport FromController from \"../ui/FormController.js\";\n\n\nconst DELAY_TIME = 500\nconst MAX_LENGTH = 30\n\n/**\n * ChatUIHelper\n * チャット機能の関連するUIの更新を管理するクラス\n */\nclass ChatUIHelper{\n    /**\n     * チャット画面を開いたときに一番下までスクロールする\n     */\n    static scrollToBottom(){\n        setTimeout(() => {\n            const scroll_el = document.querySelector(\".chat__message-main\");\n            if (scroll_el) {\n                scroll_el.scrollTo({\n                    top: scroll_el.scrollHeight,\n                    behavior: 'auto'\n                });\n            }\n        }, DELAY_TIME);\n    };\n\n\n\n    /**\n     * メッセージの長さ制限処理\n     * 指定した文字数以上の場合は省略記号 \"...\" を付ける\n     * @param {String} text - 省略記法を適応する文字列\n     * @returns {String} -　フォーマットした文字列を返す\n     */\n    static adjustMesageLength(text){\n        const formattedText = text.split('\\n')[0];\n        if (formattedText.length >= MAX_LENGTH) {\n            return formattedText.substring(0, MAX_LENGTH) + \"...\";\n        }else{\n            return formattedText\n        }\n    };\n\n    /**\n     * 現在のユーザーが指定したUUIDと一致するかを判定\n     * @param {string} sender_uuid - 判定対象のユーザーUUID(例：00bd10de-18dc-4d00-be56-02e5d12b03b2)\n     * @returns {boolean} 一致する場合はtrue、それ以外はfalse\n     */\n    static isCurrentUser(sender_uuid) {\n        const user_uuid = document.getElementById(\"js_chatuser_id\")?.value || null;\n        return user_uuid === sender_uuid;\n    }\n\n    static isCurrentAmdin(sender_uuid, receiver_uuid){\n        const admin_uuid = document.getElementById(\"js_uuid\")?.value || null;\n        const user_uuid = document.getElementById(\"js_chatuser_id\")?.value || null\n        return (admin_uuid === sender_uuid && user_uuid === receiver_uuid);\n    }\n}\n\nexport default ChatUIHelper;","\nimport Fetch from \"../../util/api/Fetch\";\nimport FormatText from \"../../util/FormatText\";\nimport userStateManager from \"../../util/state/UserStateManager\";\nimport { createChatUserContainer } from \"../templates/elementTemplate\";\nimport ChatUIHelper from \"./ChatUIHelper\";\n\n//チャットユーザーリストの管理ロジック\nclass ChatUserListController{\n    /**\n     * @param {string} senderId - メッセージ送信者のuuid(例：00bd10de-18dc-4d00-be56-02e5d12b03b2)\n     * @param {string} receiverId - メッセージ受信者のuuid(例：219f5d1a-c9e2-48c4-8a0b-59f5fe971b9a)\n     * @param {string} senderType - メッセージ送信者のタイプ (admin, user)\n     * @param {boolean} isSearching - 検索中かをtrue false\n     * @param {string} content - メッセージ内容\n     * @param {string} messageType - メッセージタイプ(text, imageなど)\n     * @param {string} time - メッセージ送信日\n    */\n\n    constructor({senderId, receiverId, senderType, isSearching, content, messageType, time}){\n        this.senderId = senderId\n        this.receiverId = receiverId\n        this.senderType = senderType\n        this.isSearching = isSearching\n        this.content = content\n        this.messageType = messageType\n        this.time = time\n    }\n\n    /**\n     * メッセージを受信したら未読数をカウントアップさせる処理\n     * 条件:\n     *  - メッセージ送信してきたユーザーのチャットを開いている場合は除外\n     *  - ブロックされているユーザーは除外\n     */\n    increaseMessageCount(){\n        const count_elements    = document.querySelectorAll(\".js_mesage_count\");\n        const chat_user_id      = document.getElementById(\"js_chatuser_id\").value;\n\n        count_elements.forEach((count) => {\n            let id = count.getAttribute(\"data-id\");\n\n            // 未読カウントを増加させる条件:\n            // - メッセージ送信者と一致する\n            // - 現在開いているチャットユーザーとは異なる\n            if (id == this.senderId && id !== chat_user_id) {\n                let currentCount = Number(count.innerHTML) || 0;\n                if (currentCount == 0) count.style.display = \"flex\"; // 初回表示\n                count.innerHTML = `${currentCount + 1}`;\n            }\n        }); \n    };\n\n    /**\n     * チャットユーザーリストを更新する処理\n     * 条件:\n     *  - メッセージ送信してきたユーザーのチャットを開いている場合は除外\n     *  - ブロックされているユーザーは除外\n     */\n    async updateChatUserList(){\n\n        const wrappers      = document.querySelectorAll(\".js_chat_wrapper\");\n        const chatWrapper   = document.getElementById(\"js_chatUser_wrapper\");\n        const currentChatUserId = document.getElementById(\"js_chatuser_id\")?.value; // DOM 要素が見つからない場合は undefined を返す\n\n        // 現在開いているチャットユーザーと一致する場合、または検索中の場合は処理を終了\n        if (currentChatUserId === this.senderId || this.isSearching.flag) return;\n\n        const chatUserId = this.senderType === \"admin\" ? this.receiverId : this.senderId;\n        // 既存のリストから送信者のリストを検索\n        const existingWrapper = Array.from(wrappers).find((wrapper) => \n            wrapper.getAttribute(\"data-uuid\") === chatUserId\n        );\n\n        \n        if (existingWrapper) {\n            this.#moveToTop(existingWrapper, chatWrapper) // 要素をトップに移動;\n        } else {\n            // 送信者のリストが存在しない場合、新規要素を作成\n            await this.#createNewDivElement();\n        }\n    };\n\n    /**\n     * 要素をリストのトップに移動\n     * \n     * @param {HTMLElement} element - 移動対象の要素\n     * @param {HTMLElement} parent - 親要素\n     */\n    #moveToTop(element, parent) {\n        const firstChild = parent.firstChild;\n        if (!firstChild) return;\n\n        const newElement = element.cloneNode(true);\n        parent.insertBefore(newElement, firstChild); // 最初に挿入\n        if (element.parentNode === parent) parent.removeChild(element); // 元の要素を削除\n    }\n\n    /**\n     * チャットユーザー一覧に新しいユーザーを追加\n     * \n     * 指定された senderId と receiverId に基づいてユーザー情報を取得し、\n     * ユーザーリストに新しい要素を挿入します。\n     */\n    async #createNewDivElement(){\n        const response = await Fetch.fetchGetOperation(`/api/users/${this.senderId}/${this.receiverId}`)\n        const parentElement = document.getElementById(\"js_chatUser_wrapper\");\n        const firstChild    = parentElement.firstChild; // 最初の子要素を取得\n\n        if(!response || response.length === 0) return;\n        \n        response.forEach((res)=>{\n            userStateManager.setState(res[\"id\"]);\n            const template = createChatUserContainer(res[\"entity_uuid\"], res)\n            if(firstChild){\n                // 最初の子要素の前に直接HTMLを挿入\n                parentElement.insertAdjacentHTML('afterbegin', template);\n            }else{\n                parentElement.innerHTML += template  // 最初の子要素がない場合、末尾に追加\n            }\n        })\n    };\n\n    /**\n     * チャットユーザーリストのメッセージを更新\n     * \n     * 管理者から一斉メッセージが送信された際、ブロックユーザー以外の\n     * チャットユーザーのメッセージを更新\n     * \n     * @param {Array} blockedIds - ブロックされているユーザーの UUID の配列\n     * 例: [\"00bd10de-18dc-4d00-be56-02e5d12b03b2\", \"219f5d1a-c9e2-48c4-8a0b-59f5fe971b9a\"]\n     */\n    updateUserListMessage(blockedIds){\n        const message_wrappers = document.querySelectorAll(\".js_chatMessage_elment\")\n\n        message_wrappers.forEach((wrapper)=>{\n            let id = wrapper.getAttribute(\"data-id\")\n\n            if(!blockedIds.includes(id)){\n                wrapper.innerHTML = \"一斉メッセージを送信しました\"\n            }\n        })\n    }\n\n    /**\n     * チャットユーザーリストのメッセージを更新\n     * \n     * メッセージの送受信が行われた際に、送信者タイプで文言を変更し、\n     * チャットユーザーのメッセージを更新\n     */\n    displayMessage() {\n        const elements = document.querySelectorAll(\".js_chatMessage_elment\");\n        elements.forEach((element) => {\n            // チャットユーザー一覧からチャットユーザーIDを取得\n            const id = element.getAttribute(\"data-id\");\n            const chatUserId = this.senderType == \"user\" ? this.senderId : this.receiverId\n            const txt = this.messageType == \"image\" ? (this.senderType == \"user\" ? \"画像が送信されました\" : \"画像を送信しました\") : this.content\n            \n            if (id == chatUserId) element.textContent  = ChatUIHelper.adjustMesageLength(txt)\n        });\n    };\n\n    /**\n     * 新しいメッセージの時間をリアルタイムでチャットユーザーリストの時間箇所に表示\n     * \n     * @param {Array} blockedIds - ブロックされているユーザーの UUID の配列\n     * 例: [\"00bd10de-18dc-4d00-be56-02e5d12b03b2\", \"219f5d1a-c9e2-48c4-8a0b-59f5fe971b9a\"]\n     */\n    updateMessageTime(blockedIds = []) {\n        const elements = document.querySelectorAll(\".js_update_message_time\");\n    \n        elements.forEach((element) => {\n            const id = element.getAttribute(\"data-id\");\n    \n            // ブロックされているユーザーをスキップ\n            if (blockedIds.includes(id)) return;\n    \n            // 時間を更新\n            const chatUserId = this.senderType === \"user\" ? this.senderId : this.receiverId;\n            element.innerHTML = id === chatUserId ? this.time : element.innerHTML;\n        });\n    }\n}\n\nexport default ChatUserListController;","import { linkifyContent } from '../../util/messaging/messageService.js';\nimport config from '../../../config/config.js';\nimport FormatText from '../../util/FormatText.js';\n\n\nexport const createRightMessageContainer = (message_type, time, content, cropArea, type) =>{\n      if(typeof(cropArea) === \"string\"){\n            cropArea = JSON.parse(cropArea)\n      }\n\n      let rawHtml = \"\";\n      if (Object.entries(cropArea).length > 0) {\n            rawHtml = `\n            <div class=\"image-container\" style=\"position: relative; display: inline-block; margin: 5px 0;\" data-crop='${JSON.stringify(cropArea)}'>\n                  <img src=\"${config.S3_URL}/${content}\" alt=\"Image\" class=\"chat-margin5 chat_image overlay-target js_chat_message\" style=\"margin: 0;\"/>\n                  <a class=\"overlay\" href=\"${cropArea.url}\" style=\"display: none;\"></a>\n            </div>\n            `;\n      } else {\n            \n            rawHtml = `\n                  <div class=\"image-container\" style=\"position: relative; display: inline-block; margin: 5px 0;\" >\n                        <img src=\"${config.S3_URL}/${content}\" alt=\"Image\" class=\"chat-margin5 chat_image js_chat_message\" style=\"margin: 0;\"/>\n                  </div>\n            `;\n      }\n      \n\n      // テキストに含まれてるURLをaタグに変換する\n      const escapedContent = FormatText.escapeHtml(content);\n      const linkedMessage = linkifyContent(escapedContent);\n      let displayMessage = linkedMessage\n      if(document.getElementById(\"js_user_name\") && type == \"greeting\"){\n            displayMessage = linkedMessage.replace(/{名前}/g, document.getElementById(\"js_user_name\")?.value || '');\n      }\n\n      // 共通の改行処理\n      displayMessage = displayMessage\n            .replace(/&lt;br&gt;/g, '\\n')  // エスケープされた<br>タグを改行に変換\n            .replace(/\\n/g, '<br>');       // 改行を<br>タグに戻す\n            \n      return `\n            <div class=\"chat__message-container-right\">\n                  <div class=\"chat__mesgae-main-right\">\n                        <div class=\"chat__message-time-txt\">${time}</div>\n                        ${message_type === \"text\" || message_type === \"broadcast_text\" || message_type === \"greeting_text\" ? \n                        `<div class=\"chat__message-box-right chat-margin5 js_chat_message\">${displayMessage}</div>` \n                        : \n                        `${rawHtml}`\n                        }\n                  </div>\n            </div>\n      `\n}\nexport const createLeftMessageContainer = (message_type, time, content, cropArea, type) =>{\n      const src = document.getElementById(\"js_user_icon_img\")?.value;\n      const icon_src = src === \"\" ? \"/img/user.png\" : src\n\n      // テキストに含まれてるURLをaタグに変換する前にエスケープ\n      const escapedContent = FormatText.escapeHtml(content);\n      const linkedMessage = linkifyContent(escapedContent);\n      let displayMessage = linkedMessage\n      if(document.getElementById(\"js_user_name\") && type === \"greeting\"){\n            displayMessage = linkedMessage.replace(/{名前}/g, document.getElementById(\"js_user_name\")?.value || '');\n      }\n\n      // 共通の改行処理\n      displayMessage = displayMessage\n            .replace(/&lt;br&gt;/g, '\\n')  // エスケープされた<br>タグを改行に変換\n            .replace(/\\n/g, '<br>');       // 改行を<br>タグに戻す\n\n\n      if(typeof(cropArea) === \"string\"){\n            cropArea = JSON.parse(cropArea)\n      }\n      let rawHtml = \"\";\n\n      if (Object.entries(cropArea).length > 0) {\n            rawHtml = `\n            <div class=\"image-container\" style=\"position: relative; display: inline-block; margin: 5px 0;\" data-crop='${JSON.stringify(cropArea)}'>\n                  <img src=\"${config.S3_URL}/${content}\" alt=\"Image\" class=\"chat-margin5 chat_image overlay-target js_chat_message\" style=\"margin: 0;\"/>\n                  <a class=\"overlay\" href=\"${cropArea.url}\" style=\"display: none;\"></a>\n            </div>\n            `;\n      } else {\n            rawHtml = `\n            <div class=\"image-container\" style=\"position: relative; display: inline-block; margin: 5px 0;\" >\n                  <img src=\"${config.S3_URL}/${content}\" alt=\"Image\" class=\"chat-margin5 chat_image js_chat_message\" style=\"margin: 0;\"/>\n            </div>\n            `;\n      }\n\n      return `\n            <div class=\"chat__message-container-left\">\n                  <div class=\"chat__mesgae-main-left\">\n                        <img src=${icon_src} alt=\"\" class=\"chat_users-icon-message\" onerror=\"this.onerror=null; this.src='/img/user.png';\" id=\"icon_msg\"> \n                        ${message_type === \"text\" || message_type === \"broadcast_text\" || message_type === \"greeting_text\" || message_type === \"test_txt\"? \n                        `<div class=\"chat__message-box-left chat-margin5 js_chat_message\">${displayMessage}</div>` \n                        : \n                        `${rawHtml}`\n                        }\n                        <div class=\"chat__message-time-txt\">${time}</div>\n                  </div> \n            </div>\n      `\n}\n\nexport const createChatUserContainer = (sender_id, res) =>{\n      const countDivStyle = document.getElementById(\"js_chatuser_id\").value == sender_id || (res[\"unread_count\"] == null || res[\"unread_count\"] === 0) ? \"none\" : \"flex\";\n      const countinnerHTML = document.getElementById(\"js_chatuser_id\").value == sender_id || (res[\"unread_count\"] == null || res[\"unread_count\"] === 0) ? 0 : res[\"unread_count\"];\n      \n      return `\n            <div class=\"chat__users-list-wraper js_chat_wrapper js_user_btn\" style=\"margin-top: 0\" data-uuid=\"${sender_id}\" data-id=\"${res[\"id\"]}\" data-admin-id=\"${document.getElementById(\"js_admin_id\").value}\">\n                  <input type=\"hidden\" name=\"admin_id\" class=\"js_admin_el\">\n                  <input type=\"hidden\" name=\"user_id\" class=\"js_user_el\">\n                  <input type=\"hidden\" name=\"token\" class=\"js_token\">\n                  <img src=${res[\"user_picture\"]} alt=\"\" onerror=\"this.onerror=null; this.src='/img/user.png';\" class=\"chat_users-icon\"> \n                  <div class=\"chat_users-list-flex\">\n                        <div class=\"chat_users-list-box\" > \n                              <p class=\"chat_name_txt\" data-simplebar>${res[\"line_name\"]}</p>\n                              <small class=\"chat_time js_update_message_time\" data-id=\"${sender_id}\">${res[\"latest_message_date\"]}</small>\n                        </div>  \n                        <div class=\"chat__users-list-msg\">\n                              <small class=\"chat_message js_chatMessage_elment\" data-id=\"${sender_id}\">${FormatText.escapeHtml(res[\"latest_all_message\"])}</small>\n                              <div class=\"message_count js_mesage_count\" data-id=\"${sender_id}\" style=\"display:${countDivStyle}\">${countinnerHTML}</div>\n                        </div>\n                  </div>\n            </div>\n      `\n}\n","import { API_ENDPOINTS } from \"../../../config/apiEndPoints\";\nimport config from \"../../../config/config\";\nimport Fetch from \"../../util/api/Fetch\";\n\n\nconst MAX_HEIGHT = \"200px\"\n/**\n * FromController\n * formの処理に関するロジックをまとめたクラス\n */\nclass FromController{\n\n    /**\n     * inputタグの高さを文字の長さにあわせて変更する処理\n     */\n    static changeTextareaHeight (){\n        const textarea = document.getElementById('js_msg');\n        const height = textarea.clientHeight\n        textarea.addEventListener('input', autoResize, false);\n        \n        function autoResize() {\n            if(this.scrollHeight > height){\n                this.style.height = 'auto'; // 高さをリセット\n                this.style.maxHeight = MAX_HEIGHT\n                this.style.height = this.scrollHeight + 'px'; // 内容に合わせて高さを設定\n                document.querySelector(\".chat__form-flex\").style.alignItems = \"end\"\n            }else{\n                document.querySelector(\".chat__form-flex\").style.alignItems = \"center\"\n            }\n        }\n    }\n\n    /**\n     * ユーザーから入力があったか否かで、ボタンのスタイルを変更\n     */\n    static disableSubmitBtn(){\n        const field = document.getElementById(\"js_msg\")\n        const btn = document.querySelector(\".chat__form-submit\")\n    \n        field.addEventListener(\"input\", (e)=>{\n            let value = e.currentTarget.value\n    \n            if(value.length > 0){\n                btn.classList.remove(\"disabled_btn\")\n            }else{\n                btn.classList.add(\"disabled_btn\")\n            }\n        })\n    }\n\n    /**\n     * 指定された情報を基にフォームを生成してリダイレクトを実行\n     *\n     * @param {string} adminId - 管理者ID\n     * @param {string} userId - ユーザーID\n     */\n    async submitRedirectForm(adminId, userId){\n        const token = await Fetch.fetchGetOperation(API_ENDPOINTS.GENERATE_TOKEN);\n        const form = document.createElement(\"form\");\n        form.method = \"POST\";\n        form.action = config.CHAT_URL;\n        form.style.visibility = \"hidden\";\n        form.enctype = \"application/x-www-form-urlencoded\";\n    \n        form.appendChild(this.#createHiddenInput(\"token\", token));\n        form.appendChild(this.#createHiddenInput(\"admin_id\", adminId));\n        form.appendChild(this.#createHiddenInput(\"user_id\", userId));\n    \n        document.body.appendChild(form);\n        form.submit();\n    };\n    \n    /**\n     * ユーティリティ関数: 隠し input 要素を作成\n     * @param {string} name - input 名称\n     * @param {string} value - input 値\n     * @returns {HTMLElement} - 作成された input 要素\n     */\n    #createHiddenInput(name, value){\n        const input = document.createElement(\"input\");\n        input.type = \"hidden\";\n        input.name = name;\n        input.value = value;\n        return input;\n    };\n\n\n    /**\n     * 画像リンク作成モーダルで毎回開いたときの初期化\n     */\n    static resetCropperUIElements(){\n        const urlInput = document.getElementById(\"js_url_input\")\n        const selectBtn = document.getElementById(\"js_change_area\")\n        const previewBtn = document.getElementById(\"js_preview_submit_btn\")\n        const choices = document.getElementsByName('choice');\n        const setting = document.getElementById(\"js_url_setting\")\n\n        choices.forEach((choice)=>{\n            if(choice.value == \"off\") choice.checked = true\n        })\n\n        setting.classList.add(\"hidden\")\n        urlInput.value = \"\";\n        selectBtn.innerHTML = \"選択範囲確定\"\n        selectBtn.style.backgroundColor = \"#fff\"\n        // selectBtn.classList.add(\"disabled_btn\")\n        previewBtn.classList.remove(\"disabled_btn\")\n    }\n\n    static showCropperSetting(){\n        const setting = document.getElementById(\"js_url_setting\")\n        setting.classList.remove(\"hidden\")\n        document.getElementById(\"js_preview_submit_btn\").classList.add(\"disabled_btn\")\n\n        const checkOff = document.getElementById(\"flexRadioDefault1\")\n        const checkOn = document.getElementById(\"flexRadioDefault2\")\n\n        checkOff.checked = false\n        checkOn.checked = true\n\n    }\n}\n\nexport default FromController;","/**\n * ModalController\n * 各モーダルの表示切替のロジックを管理するクラス\n */\nclass ModalController{\n\n    /**\n     * モーダルを開く\n     * @param {HTMLElement} modal - モーダル要素\n     */\n    static open_modal(modal){\n        document.querySelector(\".bg\").classList.remove(\"hidden\")\n        modal.classList.remove(\"hidden\")\n    }\n\n    \n    static open_management_modal(modal){\n        document.querySelector(\".template_bg\").classList.remove(\"hidden\")\n        modal.classList.remove(\"hidden\")\n    }\n\n    static close_modal(){\n        const modals = document.querySelectorAll(\".js_modal\")\n        const bg = document.querySelector(\".bg\")\n        const loader = document.querySelector(\".js_loader\")\n        bg.addEventListener(\"click\", ()=>{\n            modals.forEach((modal)=>{\n                modal.classList.add(\"hidden\")\n                bg.classList.add(\"hidden\")\n                loader.classList.add(\"hidden\")\n            })\n        })\n    }\n\n    // ローダーを表示する処理\n    static open_loader(){\n        document.querySelector(\".bg\").classList.remove(\"hidden\")\n        document.querySelector(\".loader\").classList.remove(\"hidden\")\n    }\n    \n    // ローダーを閉じる処理\n    static close_loader(){\n        document.querySelector(\".bg\").classList.add(\"hidden\")\n        document.querySelector(\".loader\").classList.add(\"hidden\")\n    }\n\n    static open_image_modal(isAdmin = false){\n        const images = document.querySelectorAll(\".chat_image\");\n        const image_modal = document.querySelector(\".js_image_src\")\n        const bg = document.querySelector(\".black_bg\")\n        const close_button = document.querySelector(\".close_button\")\n\n        images.forEach((img)=>{\n            if(img.parentElement.getAttribute(\"data-crop\") == null ||img.parentElement.getAttribute(\"data-crop\") == \"null\"){\n                img.addEventListener(\"click\", (e)=>{\n                    let target_img = e.currentTarget.src\n                    \n                    bg.classList.remove(\"hidden\")\n                    image_modal.classList.remove(\"hidden\")\n                    close_button.classList.remove(\"hidden\")\n    \n                    document.querySelector(\".js_image_src\").src = target_img\n                    \n                })\n            }\n            \n        })\n\n        close_button.addEventListener(\"click\", ()=>{\n            ModalController.close_image()\n        })\n\n        if(isAdmin){\n            image_modal.addEventListener(\"click\", ()=>{\n                ModalController.close_image()\n            }) \n        }\n        \n    }\n\n    static close_image_by_key(){\n        document.addEventListener(\"keydown\", function(event) {\n            if (event.key === \"Escape\" && document.querySelector(\".js_image_src\").classList.contains(\"hidden\") == false) {\n                ModalController.close_image()\n            }\n        });\n    }\n\n    static close_image(){\n        const image_modal = document.querySelector(\".js_image_src\")\n        const bg = document.querySelector(\".black_bg\")\n        const close_button = document.querySelector(\".close_button\")\n        bg.classList.add(\"hidden\")\n        image_modal.classList.add(\"hidden\")\n        close_button.classList.add(\"hidden\")\n    }\n\n    // cropper編集と、template作成モーダルを閉じる処理\n    static close_management_modal(){\n        const bg = document.querySelector(\".template_bg\")\n        const imageEditModal = document.querySelector(\".image_edit_modal\")\n        const confirm_modal = document.getElementById(\"js_bulk_confirm_modal\")\n        const templateModal = document.getElementById(\"js_messageSetting_modal\")\n        const cancelBtn = document.getElementById(\"js_cancel_btn\")\n        const closeBtn = document.querySelector(\".js_close_modal_btn\")\n\n        bg.addEventListener(\"click\", ()=>{\n\n            // cropper編集モーダルを閉じる処理\n            if(!imageEditModal.classList.contains(\"hidden\")){\n                // cropper編集モーダルを閉じた際に、対するfileInputの中身を空にする処理\n                const bg =  document.querySelector(\".template_bg\")\n                const imageIndex = bg.dataset.number\n                const fileInput = document.getElementById(`fileUpload_${imageIndex}`)\n                fileInput.value = \"\"\n                bg.dataset.number = \"\"\n                imageEditModal.classList.add(\"hidden\")\n            }else{\n\n                // メッセージ生成モーダルを閉じる処理\n                confirm_modal.classList.remove(\"hidden\")\n                templateModal.style.zIndex = \"997\"\n\n                cancelBtn.addEventListener(\"click\", ()=>{\n                    confirm_modal.classList.add(\"hidden\")\n                    templateModal.style.zIndex = \"998\"\n                })\n\n                closeBtn.addEventListener(\"click\", ()=>{\n                    window.location.reload()\n                })\n                \n            }\n            \n        })\n    }\n    \n}\n\nexport default ModalController;","class BrowserAndDeviceDetector{\r\n      static isBrave() {\r\n            const userAgent = navigator.userAgent.toLowerCase();\r\n            // Braveの固有のチェック\r\n            if (navigator.brave && typeof navigator.brave.isBrave === \"function\") {\r\n                  return true;\r\n            }\r\n            // ユーザーエージェントに \"brave\" が含まれている場合\r\n            if (userAgent.includes(\"brave\")) {\r\n                  return true;\r\n            }\r\n            return false;\r\n      }\r\n\r\n      static isEdge(){\r\n            const userAgent = navigator.userAgent.toLowerCase();\r\n            // Edgeの特定\r\n            return userAgent.includes(\"edg\") && !userAgent.includes(\"edgehtml\");\r\n      }\r\n\r\n      static isOpera() {\r\n            const userAgent = navigator.userAgent.toLowerCase();\r\n            // Operaの固有の識別\r\n            return userAgent.includes(\"opera\") || userAgent.includes(\"opr\");\r\n      }\r\n\r\n      static isSafari(){\r\n            return  !BrowserAndDeviceDetector.isOpera && !BrowserAndDeviceDetector.isBrave() && !BrowserAndDeviceDetector.isEdge && /Version\\/([0-9._]+).*Safari/.test(navigator.userAgent) && !navigator.userAgent.includes('Chrome');\r\n      }\r\n      static isChrome() {\r\n            return navigator.userAgent.includes('Chrome') && !navigator.userAgent.includes('Edg');\r\n      }\r\n\r\n      static isFirefox() {\r\n            const userAgent = navigator.userAgent.toLowerCase();\r\n            return userAgent.includes(\"firefox\") && !userAgent.includes(\"seamonkey\");\r\n      }\r\n\r\n      static isIOS(){\r\n            return (/iPad|iPhone|iPod/.test(navigator.userAgent) ||(navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) && !window.MSStream;\r\n      }\r\n      static isAndroid() {\r\n            const userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n            return /android/i.test(userAgent) && !window.MSStream;\r\n      }\r\n}\r\n\r\nexport default BrowserAndDeviceDetector; // ESモジュール形式でエクスポート\r\n","export default class FormatText{\n      /**\n       * エスケープ処理\n       * @param {string} - エスケープする前の文字列\n       * @return {string} - エスケープされた文字列\n       */\n      static escapeHtml(str) {\n            return str\n            .replace(/&/g, \"&amp;\")  // & は最初に変換\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\");\n\n      }\n}","class Fetch{\n\tstatic fetchPostOperation(data, url){\n\t\treturn fetch(`${url}`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t}).then(async(response) => {\n\t\t\tif (response.status === 204) {\n\t\t\t\treturn; // 204なら処理を終了\n\t\t\t}\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorMessage = await response.text(); // レスポンスの内容を取得し、待機する\n\t\t\t\tthrow new Error(`サーバーエラー: ${response.status} - ${errorMessage}`);\n\t\t\t}\n\t\t\treturn response.json();\n\t\t})\n\t\t.catch((error)=>{\n\t\t\tconsole.error(error);\n\t\t})\n\t};\n\n\tstatic fetchGetOperation(url){\n\t\treturn fetch(`${url}`, {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t}).then(async (response) => {\n\n\t\t\tif (response.status === 204) {\n\t\t\t\treturn; // 204なら処理を終了\n\t\t\t}\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorMessage = await response.text(); // レスポンスの内容を取得し、待機する\n\t\t\t\tthrow new Error(`サーバーエラー: ${response.status} - ${errorMessage}`);\n\t\t\t}\n\t\t\treturn response.json(); // 正常な場合はJSONとして返す\n\t\t})\n\t\t.then((data) => {\n\t\t\treturn data\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"エラーが発生しました:\", error.message);\n\t\t});\n\t};\n}\n\nexport default Fetch","\nimport ChatMessageController from '../../component/chat/ChatMessageController.js';\nimport ChatSearchController from '../../component/chat/ChatSearchController.js';\nimport ChatUIHelper from '../../component/chat/ChatUIHelper.js';\nimport ChatUserListController from '../../component/chat/ChatUserListController.js';\nimport { createChatUserContainer } from '../../component/templates/elementTemplate.js';\nimport Fetch from '../api/Fetch.js';\nimport FormatText from '../FormatText.js';\nimport InfiniteScrollForList from '../scrolling/InfiniteScrollForList.js';\nimport { playNotificationSound } from './notificationSound.js';\n\n// ##################################################################\n//                  サーバーへデータを送信する処理\n// ###################################################################\n\nexport const prepareMessageData = () => {\n\t// スタイル変更\n\tdocument.getElementById('js_msg').style.height = \"19px\";\n\tdocument.querySelector(\".chat__form-submit\").classList.add(\"disabled_btn\");\n\t// サーバーに送信するデータをすべて取得する\n\tconst msg = document.getElementById(\"js_msg\").value;\n\tconst formattedMsg = msg\n\tconst receiver_id = document.getElementById(\"js_receiver_id\").value;\n\tconst sender_type = document.getElementById(\"js_sender_type\").value;\n\n\treturn { msg, formattedMsg, receiver_id, sender_type };\n};\n\n// メッセージをサーバーに送信\nexport const sendMessage = (socket, msg, sender_id, receiver_id, sender_type, msg2, url) => {\n\n  \t// sender_typeに基づいて送信者・受信者を自動設定\n\tlet actual_sender_id, actual_receiver_id, data;\n\n\tif(sender_type == \"admin\"){\n\t\tactual_sender_id = sender_id; // 管理者が送信者(管理者ID)\n\t\tactual_receiver_id = receiver_id // ユーザーが受信者(ユーザーID)\n\n\t\tdata = {\n\t\t\tcontent:msg2,\n\t\t\tadmin_id: actual_sender_id,\n\t\t\tuser_id: actual_receiver_id\n\t\t}\n\t}else if(sender_type == \"user\"){\n\t\tactual_sender_id = receiver_id; // ユーザーが送信者(ユーザーID)\n\t\tactual_receiver_id = sender_id // 管理者が受信者(管理者ID)\n\n\t\tdata = {\n\t\t\tcontent:msg2,\n\t\t\tadmin_id: actual_receiver_id,\n\t\t\tuser_id: actual_sender_id\n\t\t}\n\t}\n\n\t\n\n\tFetch.fetchPostOperation(data, url)\n\t\t.then((res)=>{\n\t\t\tconst time            = res[\"created_at\"]\n\t\t\tconst admin_login_id  = res[\"admin_login_id\"]\n\n\t\t\tsocket.emit('chat message', {msg, actual_receiver_id, actual_sender_id, sender_type, time, admin_login_id});\n\t\t\tdocument.getElementById(\"js_msg\").value = \"\";\n\t})\n}\n\n\n  // ##################################################################\n//                  メッセージ受信処理\n// ###################################################################\n\n  // メッセージ受信時の処理\nexport const handleReceivedMessage = async (isON, is_searching, sender_type, sender_id, time, receiver_id, content, message_type, cropArea = []) =>{\n\t\n\tif (isON[\"isSoundOn\"]) playNotificationSound();\n\tlet current_chat_id = document.getElementById(\"js_chatuser_id\").value\n\n\tif(current_chat_id == receiver_id || current_chat_id == sender_id){\n\n\t\t// 必要なデータをオブジェクトで準備\n\t\tconst data = {\n\t\t\tmessageType: message_type,\n\t\t\tcropArea: cropArea,\n\t\t\tposition: \"beforeend\",\n\t\t\ttime: time,\n\t\t\tclassName: \"js_append_admin\",\n\t\t\tsenderType: sender_type,\n\t\t\tcontent: content,\n\t\t\tfileName: \"admin\",\n\t\t\tsenderId: sender_id\n\t\t}\n\n\t\t\n\t\t// `ChatMessageController` のインスタンスを作成\n\t\tconst chatMessageController = new ChatMessageController(data)\n\n\t\t// チャット画像を表示\n\t\tchatMessageController.displayChatMessage()\n\t}\n\n\tconst args = {\n\t\tsenderId: sender_id,\n\t\treceiverId: receiver_id,\n\t\tsenderType: sender_type,\n\t\tisSearching: is_searching,\n\t\tcontent: content,\n\t\tmessageType: message_type,\n\t\ttime: time\n\t}\n\n\tconst chatUserListController = new ChatUserListController(args)\n\n\t// チャットリストのリアルタイムでデータを表示する処理\n\tchatUserListController.updateMessageTime()\n\tchatUserListController.displayMessage()\n\tchatUserListController.increaseMessageCount()\n\tawait chatUserListController.updateChatUserList()\n\n\t// メッセージ送信者と開いてるチャットユーザーが同じだったら、メッセージを既読にするため、データベースに既読を格納する\n\tconst data = {\n\t\t\"admin_id\": receiver_id,\n\t\t\"chat_user_id\": sender_id\n\t};\n\n\tif (sender_id == document.getElementById(\"js_chatuser_id\").value) {\n\t\tFetch.fetchPostOperation(data, \"/api/user/messages/read\");\n\t}\n}\n\nexport const handleReceivedBroadcastingMessage = (sender_id, time, sendingDatatoBackEnd, ids) =>{\n\tlet orderedData = sendingDatatoBackEnd.sort((a, b) => a.order - b.order);\n\n\tconst argsForMessage = {\n\t\tposition: \"beforeend\",\n\t\ttime: time,\n\t\tclassName: \"js_append_admin\",\n\t\tsenderType: \"admin\",\n\t\tfileName: \"admin\",\n\t\tsenderId: sender_id,\n\t\tids: ids\n\t}\n\torderedData.forEach((data)=>{\n\t\tlet content = data[\"resource\"];\n\t\tlet type = data[\"type\"]\n\t\tlet cropArea = data[\"cropArea\"]\n\t\tlet url = data[\"url\"]\n\n\t\t // 必要なデータを新しいオブジェクトで作成\n\t\tconst messageArgs = {\n\t\t\t...argsForMessage, // 基本の値を引き継ぐ\n\t\t\tmessageType: type,\n\t\t\tcontent: content,\n\t\t\tcropArea : cropArea,\n\t\t\turl: url\n\t\t};\n\n\t\t// `ChatMessageController` のインスタンスを作成\n\t\tconst chatMessageController = new ChatMessageController(messageArgs)\n\n\t\t// チャットメッセージを表示\n\t\tchatMessageController.displayChatMessage()\n\t})\n\n\tconst argsForUserList = {\n\t\tsenderId: sender_id,\n\t\treceiverId: null,\n\t\tsenderType: \"admin\",\n\t\tisSearching: false,\n\t\tcontent: \"\",\n\t\tmessageType:\"\",\n\t\ttime: time\n\t}\n\n\tconst chatUserListController = new ChatUserListController(argsForUserList)\n\n\t// チャットリストのリアルタイムでデータを表示する処理\n\tchatUserListController.updateMessageTime()\n\tchatUserListController.updateUserListMessage(ids)\n}\n\n// debounce関数を作成\nexport const debounce = (func, delay) => {\n\tlet timer;\n\treturn function (...args) {\n\t\tclearTimeout(timer);\n\t\treturn new Promise((resolve) => {\n\t\t\ttimer = setTimeout(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await func.apply(this, args);\n\t\t\t\t\tresolve(result);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Debounce error:', error);\n\t\t\t\t}\n\t\t\t}, delay);\n\t\t});\n\t};\n};\n\n\n// ##################################################################\n//                      検索バーの処理\n// ###################################################################\n\n// 検索バーの入力処理\nexport const handleSearchInput = async (is_searching, value, sender_id) => {\n\tconst data = {\n\t\tadmin_id: sender_id,\n\t\ttext: value\n\t};\n\n\t// 検索欄に何かしら入力があった場合\n\tif (value.length > 0) {\n\t\tawait ChatSearchController.createDivForSearch(data)\n\t} else {\n\t\tis_searching.flag = false;\n\t\tawait fetchAndDisplayAllMessages(sender_id);\n\t}\n\n\t// メッセージの長さ制限処理\n\tconst elements = document.querySelectorAll(\".js_chatMessage_elment\");\n\telements.forEach((element) => {\n\t\telement.innerHTML = ChatUIHelper.adjustMesageLength(element.innerHTML)\n\t});\n};\n\n\n// 全ユーザーのメッセージを取得し、表示する処理\nexport const fetchAndDisplayAllMessages = async (admin_id) => {\n\tconst response = await Fetch.fetchGetOperation(`/api/users/messages/lineAccounts/${admin_id}`)\n\t\n\tconst parentElement = document.getElementById(\"js_chatUser_wrapper\");\n\tparentElement.innerHTML = \"\";\n\tresponse.forEach((res)=>{\n\t\tif(res[\"latest_all_message\"] !== null){\n\t\t\tparentElement.innerHTML += createChatUserContainer(res[\"entity_uuid\"], res);\n\t\t}\n\t\t\n\t})\n\n\t// チャットユーザーリストの無限スクロール\n\tconst element = document.querySelector(\".chat__users-list-area\")\n\tconst adminId = document.getElementById(\"js_admin_id\").value\n\tnew InfiniteScrollForList(element, adminId)\n\n};\n\n// テキストに含まれてるURLをaタグに変換する\nexport const linkifyContent = (content) =>{\n\tconst cleanContent = content.replace(/<br>/g, '\\n');\n      const pattern = /((?:https?:\\/\\/|www\\.)[^\\s<>]+)/gi;\n      const replacement = '<a href=\"$1\" openExternalBrowser=1>$1</a>';\n\n\treturn cleanContent.replace(pattern, replacement)\n}","export const playNotificationSound = () => {\n        // WAVファイルのパスを指定\n        const audio = new Audio('/img/sound.wav');\n        audio.play();\n}\n","import ChatUIHelper from \"../../component/chat/ChatUIHelper\"\nimport { createChatUserContainer } from \"../../component/templates/elementTemplate\"\nimport Fetch from \"../api/Fetch\"\nimport FormatText from \"../FormatText\"\nimport userStateManager from \"../state/UserStateManager\"\nconst MESSAGES_PER_PAGE = 20\n\nclass InfiniteScrollForList{\n      constructor(element, adminId){\n            this.element = element\n            this.hasNoValue = false\n            this.isFetchFlag = false\n            this.dataCount = 20\n            this.new_date_el = null\n            this.parentElement = null\n            this.hasDate = false\n            this.adminId = adminId\n            this.loader = document.querySelector(\".js_loader\")\n            this.userList = userStateManager.getState()\n            // コンストラクタで定義された this を使用するメソッドをイベントリスナーやコールバックとして使用する場合、bind(this) が必要\n            this.element.addEventListener(\"scroll\", this.handleScroll.bind(this))\n      }\n\n\n      async handleScroll(){\n            if(!this.hasNoValue && !this.isFetchFlag){\n                  \n                  const {scrollTop, scrollHeight, clientHeight} = this.element\n                  // 一番下までスクロールしたかを判定\n                  if (scrollTop + clientHeight + 50 >= scrollHeight) {\n\n                        this.loader.classList.remove(\"hidden\")\n                        this.isFetchFlag = true\n\n                        const url = `/api/users/list`\n\n                        const data ={\n                              \"adminId\": this.adminId,\n                              \"dataCount\" : this.dataCount,\n                              \"userList\" : this.userList\n                        }\n                        try {\n                              const response = await Fetch.fetchPostOperation(data, url);\n\n                              if(response.length === 0){\n                                    this.hasNoValue = true\n                              }\n\n                              this.loader.classList.add(\"hidden\")\n                              response.forEach((res)=>{\n                                    const parentEl = document.querySelector(\".chat__users-list-container\")\n                                    if(res[\"latest_all_message\"] !== null){\n                                          parentEl.insertAdjacentHTML(\"beforeend\",createChatUserContainer(res[\"entity_uuid\"], res)); \n                                    }\n                                    \n                              })\n\n\n                              const elements = document.querySelectorAll(\".js_chatMessage_elment\");\n                              elements.forEach((element) => {\n                                    element.innerHTML = ChatUIHelper.adjustMesageLength(element.innerHTML)\n                              });\n\n                        } catch (error) {\n                              console.error(\"Failed to fetch data:\", error);\n                        } finally {\n                              this.isFetchFlag = false;\n                              this.dataCount = this.dataCount + MESSAGES_PER_PAGE\n                        }\n                  }\n            }\n      }\n}\n\nexport default InfiniteScrollForList; // ESモジュール形式でエクスポート","// js/module/services/SocketService.js\nimport io from 'socket.io-client';\nimport BrowserAndDeviceDetector from '../BrowserAndDeviceDetector.js';\n\nclass SocketService {\n\tconstructor(url, senderId) {\n\t\tthis.socket = io(url, {\n\t\t\treconnection: true,\n\t\t\treconnectionDelay: 1000,\n\t\t\treconnectionDelayMax: 5000,\n\t\t\treconnectionAttempts: Infinity\n\t\t});\n\n\t\tif(BrowserAndDeviceDetector.isAndroid() || BrowserAndDeviceDetector.isIOS){\n\t\t\tif(document.visibilityState == \"visible\"){\n\t\t\t\tthis.socket.emit('userVisibility', {\n\t\t\t\t\tvisibilityState: document.visibilityState,\n\t\t\t\t\tuser_id: senderId,\n\t\t\t\t\tis_visible: true\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tthis.socket.on('connect', () => {\n\t\t\tthis.registerUser(senderId);\n\t\t});\n\n\t\tthis.socket.on('disconnect', () => {\n\t\t\t// 接続が切れた場合の処理を記述\n\t\t\twindow.location.reload();\n\t\t});\n\t}\n\n\tregisterUser(senderId) {\n\t\tif (this.socket && senderId) {\n\t\tthis.socket.emit('register', senderId);\n\t\t}\n\t}\n\n\tsendHeartbeat() {\n\t\tif (this.socket) {\n\t\t\tthis.socket.emit('heartbeat');\n\t\t}\n\t}\n\n\tgetSocket() {\n\t\treturn this.socket;\n\t}\n}\n\nexport default SocketService;","// シングルトンパターン\n\nclass UserStateManager{\n      constructor(){\n            if (!UserStateManager.instance) {\n                  this.list = []; // 初期状態\n                  UserStateManager.instance = this; // インスタンスを保存\n            }\n            return UserStateManager.instance; // 常に同じインスタンスを返す\n      }\n\n      getState(){\n            return this.list\n      }\n\n      setState(value){\n            this.list.push(value)\n      }\n}\n\nconst userStateManager = new UserStateManager();\nObject.freeze(userStateManager); // インスタンスを凍結して変更不可に\n\nexport default userStateManager;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import config from \"./config/config.js\";\nimport ChatMessageController from \"./module/component/chat/ChatMessageController.js\";\nimport ChatUIHelper from \"./module/component/chat/ChatUIHelper.js\";\nimport ModalController from \"./module/component/ui/ModalController.js\";\nimport BrowserAndDeviceDetector from './module/util/BrowserAndDeviceDetector.js';\nimport SocketService from \"./module/util/socket/SocketService.js\";\n\n// ユーザーチャット画面の表示(ブラウザや端末ごとで変わるので)\ndocument.addEventListener('DOMContentLoaded', () => {\n      \n      const element =document.querySelector(\".chat__message-main\")\n      const isSafariIOS = BrowserAndDeviceDetector.isSafari() && BrowserAndDeviceDetector.isIOS();\n      const isAndroidFirefox = BrowserAndDeviceDetector.isAndroid() && BrowserAndDeviceDetector.isFirefox();\n\n      if(isAndroidFirefox){\n            element.style.height = \"73vh\"; // 元の高さに戻す\n      }else if(isSafariIOS){\n            element.style.height = \"calc(100vh - 210px)\"; // 元の高さに戻す\n      \n      }else{\n            const mediaQuery = window.matchMedia('(min-width: 641px)');\n            if(mediaQuery.matches){\n                  element.style.height = \"81vh\"; // 元の高さに戻す\n            }else{\n                  element.style.height = \"calc(100dvh - 115px)\"; // 元の高さに戻す\n            }\n      }\n});\n\n\n// // 画像を拡大する\nModalController.open_image_modal()\n\n\n// socket通信処理\n// グローバル変数\n//!! sender_id = ユーザーID!!\nconst sender_id = document.getElementById(\"js_user_id\").value\n// socketServiceの初期化\nconst socketService = new SocketService(config.SOCKET_URL, sender_id)\n// 30秒ごとにハートビートを送信\nsetInterval(socketService.sendHeartbeat(), 10000);\nconst socket  = socketService.getSocket()\n\n\n\n// サーバーからのメッセージを受信\nsocket.on('test message',async ( sendingDatatoBackEnd, created_at, userIdsArray, type) => {\n\n      sendingDatatoBackEnd.forEach((data)=>{\n            let args = {\n                  messageType: data[\"type\"],\n                  position: \"beforeend\",\n                  time: created_at,\n                  className: \"js_append_user\",\n                  senderType: \"admin\",\n                  content: data[\"resource\"],\n                  fileName: \"user\",\n                  senderId: \"\",\n                  cropArea : \n                        {\n                              \"url\": data[\"cropArea\"][\"url\"],\n                              \"width_percent\": data[\"cropArea\"][\"width_percent\"],\n                              \"height_percent\": data[\"cropArea\"][\"height_percent\"],\n                              \"x_percent\": data[\"cropArea\"][\"x_percent\"],\n                              \"y_percent\": data[\"cropArea\"][\"y_percent\"],\n\n                        },\n                  url: data[\"cropArea\"][\"url\"],\n                  type : type ?? null\n            }\n\n\n            const chatMessageController = new ChatMessageController(args)\n            // チャットメッセージを表示\n\t\tchatMessageController.displayChatMessage()\n            ChatUIHelper.scrollToBottom()\n      })\n      \n\n});"],"names":["API_ENDPOINTS","SEARCH_USERS","LOGIN","REGISTER","FETCH_MESSAGES","GENERATE_TOKEN","ADMIN_MESSAGES_STORE","TEMPLATE_SELECT","UPDATE_BACKGROUND_COLOLR","GET_USER_CHATS","SOCKET_URL","S3_URL","CHAT_URL","createLeftMessageContainer","createRightMessageContainer","ModalController","_ChatMessageController_brand","WeakSet","ChatMessageController","_ref","messageType","cropArea","position","time","className","senderType","content","fileName","senderId","type","_ref$ids","ids","_classCallCheck","_classPrivateMethodInitSpec","parentElement","document","querySelector","concat","_createClass","key","value","displayChatMessage","includes","getAttribute","shouldAddRightMessage","_assertClassBrand","_isRightAlignedMessage","call","_addChatMessage","isRight","validPositions","validPosition","messageHTML","insertAdjacentHTML","Object","entries","length","_applyCropArea","_this","containers","querySelectorAll","forEach","container","targetImage","overlay","onload","_updateOverlayStyles","imageRect","getBoundingClientRect","cropData","JSON","parse","dataset","crop","style","left","x_percent","width","top","y_percent","height","width_percent","height_percent","display","_regeneratorRuntime","e","t","r","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","Fetch","createChatUserContainer","ChatUIHelper","ChatSearchController","_createDivForSearch","_callee","data","response","_callee$","_context","fetchPostOperation","getElementById","innerHTML","res","createDivForSearch","_x","FormatText","FromController","DELAY_TIME","MAX_LENGTH","scrollToBottom","setTimeout","scroll_el","scrollTo","scrollHeight","behavior","adjustMesageLength","text","formattedText","split","substring","isCurrentUser","sender_uuid","_document$getElementB","user_uuid","isCurrentAmdin","receiver_uuid","_document$getElementB2","_document$getElementB3","admin_uuid","_checkPrivateRedeclaration","add","has","userStateManager","_ChatUserListController_brand","ChatUserListController","receiverId","isSearching","increaseMessageCount","count_elements","chat_user_id","count","id","currentCount","_updateChatUserList","wrappers","chatWrapper","currentChatUserId","chatUserId","existingWrapper","flag","Array","from","find","wrapper","_moveToTop","_createNewDivElement","updateChatUserList","updateUserListMessage","blockedIds","message_wrappers","displayMessage","_this2","elements","element","txt","textContent","updateMessageTime","_this3","undefined","parent","firstChild","newElement","cloneNode","insertBefore","parentNode","removeChild","_createNewDivElement2","_callee2","_callee2$","_context2","fetchGetOperation","setState","template","linkifyContent","config","message_type","rawHtml","stringify","url","escapedContent","escapeHtml","linkedMessage","replace","src","icon_src","sender_id","countDivStyle","countinnerHTML","MAX_HEIGHT","_FromController_brand","_submitRedirectForm","adminId","userId","token","form","createElement","action","visibility","enctype","appendChild","_createHiddenInput","body","submit","submitRedirectForm","_x2","changeTextareaHeight","textarea","clientHeight","addEventListener","autoResize","maxHeight","alignItems","disableSubmitBtn","field","btn","currentTarget","classList","remove","resetCropperUIElements","urlInput","selectBtn","previewBtn","choices","getElementsByName","setting","choice","checked","backgroundColor","showCropperSetting","checkOff","checkOn","input","open_modal","modal","open_management_modal","close_modal","modals","bg","loader","open_loader","close_loader","open_image_modal","isAdmin","images","image_modal","close_button","img","target_img","close_image","close_image_by_key","event","contains","close_management_modal","imageEditModal","confirm_modal","templateModal","cancelBtn","closeBtn","imageIndex","number","fileInput","zIndex","window","location","reload","BrowserAndDeviceDetector","isBrave","userAgent","navigator","toLowerCase","brave","isEdge","isOpera","isSafari","test","isChrome","isFirefox","isIOS","platform","maxTouchPoints","MSStream","isAndroid","vendor","opera","str","default","fetch","headers","errorMessage","status","ok","json","error","console","_ref2","message","InfiniteScrollForList","playNotificationSound","prepareMessageData","msg","formattedMsg","receiver_id","sender_type","sendMessage","socket","msg2","actual_sender_id","actual_receiver_id","admin_id","user_id","admin_login_id","emit","handleReceivedMessage","isON","is_searching","current_chat_id","_data","chatMessageController","args","chatUserListController","_args","_x3","_x4","_x5","_x6","_x7","_x8","handleReceivedBroadcastingMessage","sendingDatatoBackEnd","orderedData","sort","b","order","argsForMessage","messageArgs","_objectSpread","argsForUserList","debounce","func","delay","timer","_len","_key","clearTimeout","result","t0","handleSearchInput","_ref3","_callee3","_callee3$","_context3","fetchAndDisplayAllMessages","_x9","_x10","_x11","_ref4","_callee4","_callee4$","_context4","_x12","cleanContent","pattern","replacement","audio","Audio","play","MESSAGES_PER_PAGE","hasNoValue","isFetchFlag","dataCount","new_date_el","hasDate","userList","getState","handleScroll","bind","_handleScroll","_this$element","scrollTop","parentEl","io","SocketService","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","Infinity","visibilityState","is_visible","on","registerUser","sendHeartbeat","getSocket","UserStateManager","instance","list","freeze","isSafariIOS","isAndroidFirefox","mediaQuery","matchMedia","matches","socketService","setInterval","created_at","userIdsArray"],"sourceRoot":""}